// Copyright 2019 Axel Howind
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id "com.github.node-gradle.node" version "2.2.0"
}

node {
    // Version of node to use.
    version = '13.5.0'

    // Version of npm to use.
    npmVersion = '6.13.4'

    // Version of Yarn to use.
    yarnVersion = '1.21.1'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/node/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/node/npm")

    // Set the work directory for Yarn
    yarnWorkDir = file("${project.buildDir}/node/yarn")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/node")
}

javafx {
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
    api project(':fx-editors')

    implementation "com.dua3.utility:utility:${dua3_utility_version}"
}

def distFolder = './node/dist'
def targetFolder = './src/main/resources/com/dua3/fx/editors/text/node'

task cleanBundle(type: Delete) {
    delete targetFolder
}

task runWebpack(type:NpmTask) {
    dependsOn(npmInstall, cleanBundle)
    args = ['run', 'build']
}

task copyBundle(type: Copy) {
    dependsOn(runWebpack)
    from distFolder
    into targetFolder
}

compileJava.dependsOn copyBundle
